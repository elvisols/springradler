version: "3.3"

services:
  postgres:
    container_name: sbs_postgres
    image: "postgres:10.5"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: spring_boot_simple
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spring-boot-simple
    command:
      ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
  redis:
    container_name: sbs_redis
    image: redis:6.2.3
    ports:
      - 6380:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - spring-boot-simple

  springradler:
    container_name: spring_boot_gradler
    # docker-compose up --build
    # build:
    #   context: .
    image: "springradler_app"
    ports:
      - 9001:9001
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/spring_boot_simple
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
    networks:
      - spring-boot-simple
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/apis/actuator/health"]
      interval: 10s
      timeout: 10s
      retries: 10

  prometheus:
    container_name: sbs_prometheus
    image: prom/prometheus:v2.27.1
    ports:
      - 9090:9090
    networks:
      - spring-boot-simple
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090"]
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  # Grafana can pull data from various data sources such as Prometheus, ElasticSearch, PostgreSQL, etc
  # Default credential: admin/admin
  grafana:
    container_name: sbs_grafana
    image: grafana/grafana:7.5.7
    ports:
      - 3000:3000
    networks:
      - spring-boot-simple
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3030"]
      interval: 10s
      timeout: 10s
      retries: 10

networks:
  spring-boot-simple:
