plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'eclipse'
}

group = 'com.springapp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
    mapstructVersion = '1.4.2.Final'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'org.postgresql:postgresql:42.2.20'
    implementation 'org.liquibase:liquibase-core:4.3.5'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	/*
	Prometheus is a monitoring tool that works on time series data
	Micrometer can be used to transform /actuator/metrics endpoint into the format Prometheus can understand
	*/
	implementation 'io.micrometer:micrometer-registry-prometheus:1.7.0'

	implementation platform('org.testcontainers:testcontainers-bom:1.15.3')

	compileOnly 'org.projectlombok:lombok'
	compileOnly "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation('org.testcontainers:postgresql')

	testCompileOnly 'org.projectlombok:lombok'

	testAnnotationProcessor 'org.projectlombok:lombok'
}

test {
	useJUnitPlatform()
}

sourceSets.test.resources.srcDir 'src/test/resources'

task copyDocs(type: Copy) {
    duplicatesStrategy = 'include'
}

// a hack to mapstruct mapper issues
eclipse {
    classpath {
        containers 'org.eclipse.buildship.core.gradleclasspathcontainer'
        file.whenMerged { cp ->
            def entries = cp.entries;
            def src = new org.gradle.plugins.ide.eclipse.model.SourceFolder('build/generated/sources/annotationProcessor/java/main/', null)
            entries.add(src)
        } 
    }
}